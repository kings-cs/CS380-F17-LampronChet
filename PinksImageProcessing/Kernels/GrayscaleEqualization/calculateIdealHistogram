__kernel void calculate_ideal_histogram(__global int *result, __global const int * dimensions){
	int i = (get_group_id(0) * get_local_size(0)) + get_local_id(0);
	int idealizedValue = dimensions[0] / dimensions[1];
	result[i] = idealizedValue;
	barrier(CLK_LOCAL_MEM_FENCE);
	int modVal = dimensions[0] % dimensions[1];
	int firstIndex = ((dimensions[2] - 1) / 2) - (modVal / 2);
	int lastIndex = ((dimensions[2] - 1) / 2) + (modVal / 2);
	if (i >= firstIndex && i <= lastIndex) {
			atomic_inc(&result[i]);
	}
}